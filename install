#!/bin/bash



#mkdir -p log
## cloudview media rename
#if [[ -d cloudview ]]
#then
#    echo 
#else
#    mv cloudview*  cloudview
#fi
#if [[ $? != 0 ]]
#then
#    echo "Make sure cloudview software  is in ( cloudview_deploy ) directory !"
#    exit 1
#fi
#
#########################################
##   handle hosts file 
#######################################
#if [[ -f  ip_map    ]]
#then 
#   sed -i 's/  / /g' ip_map 
#   echo "127.0.0.1 localhost" > hosts  
#   awk  '{printf("%s   %s\n", $1,$2)}' ip_map >> hosts
#else
#    echo please check ip_map  is exist
#    exit 1
#fi
#cp -rf /etc/hosts  /etc/hosts.bak
#cp -rf hosts  /etc/  
########################################
#  extract  Support
###################################
#tmppath=`pwd`
#cd cloudview/Supports 
#for i  in `ls *.gz`
#do
#    gzip -d $i
#done
#for i  in `ls *.tar`
#do
#    tar -xvf  $i
#done
#
#cd $tmppath

########################################
# no_passwd 
########################################
#tmppath=`pwd`
#nodelist=`awk '{print $1 }' ip_map | perl -lane  ' push @a,$_ ;END{print join ",",@a }'`
#tmppasswd='111111'
#cd ./utility/nopasswd/
#chmod a+x * 
#echo  ./xmakessh  --pass  $tmppasswd  --nodes  $nodelist 
#./xmakessh  --pass  $tmppasswd  --nodes  $nodelist 
#cd $tmppath
#unset tmppath
#unset tmppasswd
#unset tmppasswd
#########################################
#  config  before reboot 
######################################
exit 1
ip=''
name=''
manage_eth="eth1"
business_ip=''
business_eth="eth0"
business_br="br0"
business_netmask='24'

echo  "#begin comfigure each node #"
for  line  in `egrep  -v '^\s*#' ip_map | grep hvn | sed  -e 's/  / /g'  -e 's/ /:/g'`
do
    ip=`echo $line | awk -F: '{print $1}'`
    name=`echo $line | awk -F: '{print $2}'`
    business_ip=`echo $line | awk -F: '{print $3}'`
    if [[ "X$business_ip" == "X" ]]; then
        business_netmask=''
    fi
    echo "########################################"
    echo "# $ip  $name  $business_ip"
	if [[ "X$name" == "Xhvn1" ]];then
        # bridging bussiness  ip
	    cd utility/
	    touch ../log/bridging.log
        nohup sh   bridging.sh  $business_eth $business_br  $business_ip $business_netmask  > ../log/bridging.log    2>&1 &  
        cd ..
        	
        #excute A1  master 
        cd master
	    touch ../log/master_before.log
	    nohup sh master_hyper_before_reboot.sh  $manage_eth $ip  > ../log/master_before.log   2>&1  &
	    cd ..
        echo "########################################"
		continue
	fi            

	#copy file	
    cd ..  
    scp  -r   cloudview_deploy/     ${ip}:/root/  
    cd cloudview_deploy
    # bridging bussiness ip
    tmp_cmd="cd /root/cloudview_deploy/utility/;touch ../log/bridging; nohup sh   bridging.sh  $business_eth $business_br $business_ip $business_netmask   >../log/bridging.log    2>&1 & " 
    ssh $ip $tmp_cmd 
    unset tmp_cmd 
    
  	#excute B1  hvn
    tmp_cmd="cd /root/cloudview_deploy/hvn ;touch ../log/${name}_before.log ;nohup  sh  hvn_before_reboot.sh  $manage_eth  $ip  > ../log/${name}_before.log  2>&1 & "

    ssh $ip  $tmp_cmd 
	unset tmp_cmd
#	echo $ip
     echo "########################################"
done 
unset ip
unset name 
unset business_ip
unset manage_eth
echo 'Wait 20 Second!'
sleep 20
################################
# Check Finish 
################################
for  line  in `cat hosts| grep hvn  | grep -v 'hvn1 ' | grep -v 'hvn1$' | awk '{print $1}' `
do

    ssh $line  'test -f /root/cloudview_deploy/hvn/success_b1'
    if [[ $? == 0 ]]
    then
        echo  $line "  finish"
    else
	echo  $line  "  unfinish"
    fi

done

masterip=`grep 'hvn1 ' ip_map | awk '{print $1}'`
test -f ./master/success_a1
if [[ $? == 0 ]]
then
    echo  $masterip "  finish"
else
    echo  $masterip  " unfinish"
fi



